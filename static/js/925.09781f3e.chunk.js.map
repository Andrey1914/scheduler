{"version":3,"file":"static/js/925.09781f3e.chunk.js","mappings":"yOAEaA,EAAOC,EAAAA,EAAAA,EAAH,yC,GAIKA,EAAAA,EAAAA,OAAH,gXAqBKA,EAAAA,EAAAA,MAAH,6E,QCpBRC,EAAO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACnBC,GAAWC,EAAAA,EAAAA,MAIjB,OACE,UAACC,EAAA,EAAD,CAAKC,QAAQ,OAAOC,WAAW,SAASC,QAAQ,OAAOC,EAAE,QAAzD,WAME,SAACX,EAAD,UAAOI,KACP,mBAAQQ,KAAK,SAASC,QAXL,kBAAMR,GAASS,EAAAA,EAAAA,IAAWX,GAA1B,EAWjB,UACE,SAAC,MAAD,CAAUY,KAAM,SAIvB,ECzBYC,EAAgB,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAhB,EAIrBC,EAAiB,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,KAAhB,ECFtBC,EAAOrB,EAAAA,EAAAA,GAAH,gMCIJsB,EAAW,WACtB,IAAML,GAAQM,EAAAA,EAAAA,IAAYJ,GAE1B,OACE,SAACb,EAAA,EAAD,CAAKkB,GAAG,KAAKjB,QAAQ,OAAOE,QAAQ,MAAMgB,aAAa,MAAvD,SACGR,EAAMS,KAAI,gBAAGxB,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACT,SAACkB,EAAD,WACE,SAACpB,EAAD,CAAMC,GAAIA,EAAIC,KAAMA,KADXD,EADF,KAOhB,ECfYyB,EAAa,WACxB,IAAMvB,GAAWC,EAAAA,EAAAA,MAcjB,OACE,kBAAMuB,SAba,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,cACb7B,EAAO4B,EAAKE,SAAS9B,KAAK+B,MAChC,GAAa,KAAT/B,EAGF,OAFAC,GAAS+B,EAAAA,EAAAA,IAAQhC,SACjB4B,EAAKK,QAGPC,MAAM,sIACP,EAGC,WACE,kBAAOC,KAAK,UACZ,mBAAQ3B,KAAK,SAAb,wBAGL,ECjBc,SAAS4B,IACtB,IAAMnC,GAAWC,EAAAA,EAAAA,MACXmC,GAAYjB,EAAAA,EAAAA,IAAYR,GAM9B,OAJA0B,EAAAA,EAAAA,YAAU,WACRrC,GAASsC,EAAAA,EAAAA,MACV,GAAE,CAACtC,KAGF,iCACE,SAACuB,EAAD,KACA,yBAAMa,GAAa,4BACnB,SAAClB,EAAD,MAGL,C","sources":["components/Task/TaskStyled.jsx","components/Task/Task.jsx","redux/tasks/selectors.jsx","components/TaskList/TaskListStyled.jsx","components/TaskList/TaskList.jsx","components/TaskEditor/TaskEditor.jsx","components/pages/Tasks.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Text = styled.p`\n  flex-grow: 1;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  margin: 0;\n  border: none;\n  border-radius: 4px;\n  background-color: transparent;\n  cursor: pointer;\n  color: #f44336;\n  :hover {\n    background-color: #e2e5e8;\n  }\n  :active {\n    background-color: #bdbdbd;\n  }\n`;\n\nexport const Checkbox = styled.input`\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteTask } from 'redux/tasks/operations';\nimport { MdDelete } from 'react-icons/md';\n\nimport { Box } from 'components/Box';\nimport { Text } from './TaskStyled';\n\nexport const Task = ({ id, text }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteTask(id));\n  // const handleToggle = () => dispatch(toggleCompleted(task.id));\n\n  return (\n    <Box display=\"flex\" alignItems=\"center\" gridGap=\"12px\" p=\"8px 0\">\n      {/* <Checkbox\n        type=\"checkbox\"\n        checked={task.completed}\n        onChange={handleToggle}\n      /> */}\n      <Text>{text}</Text>\n      <button type=\"button\" onClick={handleDelete}>\n        <MdDelete size={24} />\n      </button>\n    </Box>\n  );\n};\n","export const selectLoading = state => state.tasks.loading;\n\nexport const selectFilter = state => state.tasks.filter;\n\nexport const selectAllTasks = state => state.tasks.items;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  padding-left: 10px;\n  padding-right: 10px;\n  /* border-bottom: 1px solid #2f2f37; */\n  box-shadow: 0px 3px 5px 1px rgba(45, 90, 124, 0.2);\n  border-radius: 3px;\n`;\n","import { useSelector } from 'react-redux';\nimport { Task } from 'components/Task/Task';\nimport { selectAllTasks } from 'redux/tasks/selectors';\nimport { Item } from './TaskListStyled';\nimport { Box } from 'components/Box';\n\nexport const TaskList = () => {\n  const tasks = useSelector(selectAllTasks);\n\n  return (\n    <Box as=\"ul\" display=\"grid\" gridGap=\"8px\" borderRadius=\"3px\">\n      {tasks.map(({ id, text }) => (\n        <Item key={id}>\n          <Task id={id} text={text} />\n        </Item>\n      ))}\n    </Box>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { addTask } from 'redux/tasks/operations';\n\nexport const TaskEditor = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const text = form.elements.text.value;\n    if (text !== '') {\n      dispatch(addTask(text));\n      form.reset();\n      return;\n    }\n    alert('Зроби, будь ласка, замітку');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input name=\"text\" />\n      <button type=\"submit\">Add todo</button>\n    </form>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TaskList } from 'components/TaskList/TaskList';\nimport { TaskEditor } from 'components/TaskEditor/TaskEditor';\nimport { fetchTasks } from 'redux/tasks/operations';\nimport { selectLoading } from 'redux/tasks/selectors';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchTasks());\n  }, [dispatch]);\n\n  return (\n    <>\n      <TaskEditor />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <TaskList />\n    </>\n  );\n}\n"],"names":["Text","styled","Task","id","text","dispatch","useDispatch","Box","display","alignItems","gridGap","p","type","onClick","deleteTask","size","selectLoading","state","tasks","loading","selectAllTasks","items","Item","TaskList","useSelector","as","borderRadius","map","TaskEditor","onSubmit","event","preventDefault","form","currentTarget","elements","value","addTask","reset","alert","name","Tasks","isLoading","useEffect","fetchTasks"],"sourceRoot":""}